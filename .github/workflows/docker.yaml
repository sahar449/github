name: Build & Test Flask API

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: flaskdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -prootpass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # ----- Docker Hub -----
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask:latest

      # ----- GitHub Container Registry (GHCR) -----
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & Push to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/flask:latest

      # ----- Run Flask & Test -----
      - name: Run Flask App
        run: |
          docker run -d \
            --name flask-app \
            --network host \
            -e DB_HOST=127.0.0.1 \
            -e DB_USER=root \
            -e MYSQL_ROOT_PASSWORD=rootpass \
            -e DB_NAME=flaskdb \
            ${{ secrets.DOCKERHUB_USERNAME }}/flask:latest
          
          sleep 15
          echo "Flask app started!"

      - name: Test App
        run: |
          echo ">>> Health check"
          curl http://localhost:5000/health

          echo ">>> Get users"
          curl http://localhost:5000/

          echo ">>> Insert new user"
          mysql -h127.0.0.1 -P3306 -uroot -prootpass flaskdb \
            -e "INSERT IGNORE INTO users (name) VALUES ('NewUser');"

          echo ">>> Verify user added"
          curl http://localhost:5000/ | grep NewUser

      - name: Cleanup
        if: always()
        run: docker stop flask-app || true
