name: Build & Test Flask API

on: 
  push:
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: flaskdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -prootpass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Flask Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flask:latest .

      - name: Push image to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask:latest

      - name: Run Flask container
        run: |
          docker run -d \
            --name flask-app \
            --network host \
            -e DB_HOST=127.0.0.1 \
            -e DB_USER=root \
            -e MYSQL_ROOT_PASSWORD=rootpass \
            -e DB_NAME=flaskdb \
            ${{ secrets.DOCKERHUB_USERNAME }}/flask:latest

          sleep 10
          echo "Flask app started!"

      - name: Test App
        run: |
          # בדיקת health
          curl http://localhost:5000/health

          # קבלת יוזרים
          curl http://localhost:5000/

          # הוספת יוזר חדש
          mysql -h127.0.0.1 -P3306 -uroot -prootpass flaskdb \
            -e "INSERT IGNORE INTO users (name) VALUES ('NewUser');"

          # בדיקה שהיוזר נוסף
          curl http://localhost:5000/ | grep NewUser

      - name: Cleanup
        if: always()
        run: docker stop flask-app
